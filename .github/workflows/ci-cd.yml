name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Test with Gradle
      run: ./gradlew test
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and save Docker image
      run: |
        docker build -t java-jar-app .
        docker save java-jar-app | gzip > java-jar-app.tar.gz

    - name: Deploy to EC2
      if: github.ref == 'refs/heads/main'
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        source: "java-jar-app.tar.gz"
        target: "/home/ubuntu/"
        strip_components: 0

    - name: Load and run Docker image on EC2
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Stop and remove any existing container
          docker stop java-app || true
          docker rm java-app || true
          
          # Load the Docker image
          docker load -i /home/ubuntu/java-jar-app.tar.gz
          
          # Run the container
          docker run -d \
            --name java-app \
            -p 9000:9000 \
            -e PORT=9000 \
            --restart unless-stopped \
            java-jar-app
            
          # Clean up
          rm /home/ubuntu/java-jar-app.tar.gz
          docker system prune -f
